% -*-latex-*-
%\Preamble{charset="latin1",p-width,pic-align,pic-tabular}
\Preamble{xhtml,charset="latin1",pic-m,p-width,pic-align,pic-tabular}

% <config-eqns>
% Styling for numbered equations
% This puts the SVG in a three element table
% <null> | SVG | equation number
% where the first and last elements are of size 0.01
% so that the middle element will be centered

% Center pic-tabular objects
\Css{.pic-tabular { display: block; margin: 0 auto; text-align: center; }}
\Css{.pic-tabular img { display: block; margin: 0 auto; }}

\Css{.equation{
    display: table;
    width: 1.0;
    margin-top: 1.5em;
    margin-bottom: 1.5em;
}}
\Css{.equation td:first-child{
    width: 0.99;
    text-align: center;
    vertical-align: middle;
}}
\Css{.equation td:last-child{
    width: 0.01;
    text-align: right;
    vertical-align: middle;
}}

% For unnumbered equations - with the same vertical margins
\Css{.equation-star{
    display: block;
    text-align: center;
    margin-top: 1.5em;
    margin-bottom: 1.5em;
}}

% Common styling for both types
\Css{.math-display img{ /* Targets images within elements with class math-display */
    display: block;     /* Makes the image a block element */
    margin-left: auto;  /* These two margin settings together */
    margin-right: auto; /* center the image horizontally */
    width: 1.0;
  }
}
  
% Simple configuration for class 'equation-star'
\Configure{equation*}                   % Configure unnumbered equations
{                                       % Beginning code
    \ifvmode\IgnorePar\fi\EndP          % Handle vertical mode and paragraph endings
    \HCode{<div class="equation-star">} % Start a div with class="equation-star"
}
{                                       % Ending code
    \HCode{</div>}                      % Close the div
  }
% <config-eqns/>

% <inline-math-config>
% Configure inline math in headers to be larger with proper spacing
%\Configure{$}{\PicMath}{\EndPicMath}{} 
% \Configure{$}
%   {\HCode{<span class="math-wrapper"><span class="space"></span>}\PicMath}
%   {\EndPicMath\HCode{<span class="space"></span></span>}}
%   {}

% \Css{%
%   h4 img[class="math"] {
%     transform: scale(1.5);
%     transform-origin: center center;
%   }
%   .math-wrapper {
%     display: inline-grid;
%     grid-template-columns: 1fr auto 1fr;
%     align-items: center;
%   }
% }
%\Configure{$}{\PicMath}{\EndPicMath}{}   
% Configure inline math delimiters to use PicMath handling

% \Configure{PicMath}{}{}{}{class="math";align="absmiddle"}
\ExplSyntaxOn
\Configure{PicMath}{\setbox0=}
{\Css{img[src="\PictureFile"]{vertical-align:-\fp_eval:n{ (\dim_to_fp:n{\dp0}/(\dim_to_fp:n{\ht0}+\dim_to_fp:n{\dp0}) * 100)}\%;}}
\box0}{}
{ class="math" }
\ExplSyntaxOff

% Configure displaymath to add CSS class and alignment to the generated images
% The effect is to:
% 1. Make inline math (like $x^2$) generate images
% 2. Add the class="math" to these images
% 3. Set vertical alignment to "absmiddle" to align the math images with surrounding text

% This ensures that inline mathematical expressions:
% - Are converted to images
% - Are properly aligned with the text
% - Can be styled via CSS using the 'math' class
% - Are vertically centered within the text line
% <inline-math-config/>

\DeclareGraphicsExtensions{.svg,.png,.jpg} % change to %\DeclareGraphicsExtensions{.png,.svg,.jpg} to prefer png pix
\DeclareGraphicsRule{.png}{bmp}{.xbb}{}

% <includegraphics-sizing/>
% Fix tex4ht includegraphics to allow scaling relative to LaTeX textwidth
% https://tex.stackexchange.com/questions/563276/graphics-scaling-in-tex4ht
\makeatletter
\ExplSyntaxOn
\Configure{Gin-dim}{style="width:\fp_eval:n{round(\Gin@req@width/\textwidth*100,2)}\%"}
\ExplSyntaxOff
\makeatother
% <includegraphics-sizing/>

% <graphics-svg>
\Configure{Picture}{.svg}        % Configure Picture command to handle .svg extension
\makeatletter                    % Allow @ in command names

\Configure{graphics*}            % Configure graphics handling
{svg}                           % Specifically for SVG files
{
  % Ensure the SVG file is included in the output
  {\Configure{Needs}{File: \Gin@base.svg}\Needs{}}
  
  % Create HTML picture element for the SVG
  \Picture[\csname a:GraphicsAlt\endcsname]    % Include alt text if specified
          {\csname Gin@base\endcsname.svg      % The SVG filename
           \csname a:Gin-dim\endcsname}        % Include dimensions
}
\makeatother
% <graphics-svg/>

\begin{document}
\EndPreamble\endinput

\Css{%
  h4 {
    font-weight: normal;  /* or 400 */
  }
}
\Css{%
  h4 img[class="math"] {
    transform: scale(1.5);
    transform-origin: center center;
  }
}
%    transform: scale(1.5) translateY(-0.1em);

% 20241103:
% - updated with help of (mainly) Claude

% Make links visible but unobtrusive (surround with light dashing)
% \Css{%
%   a:link { color: \#333333; text-decoration: none; border: 1px solid \#cccccc; padding: 0 2px; }%
%   a:visited { color: \#333333; text-decoration: none; border: 1px solid \#cccccc; padding: 0 2px; }%
%   a:hover { color: \#333333; text-decoration: none; border: 1px solid \#cccccc; padding: 0 2px; }%
%   a:active { color: \#333333; text-decoration: none; border: 1px solid \#cccccc; padding: 0 2px; }%
% }

% Prevent tex4ht from puttin date in html
\Configure{VERSION}{} 

% Wrap each figure in a <div class="figure"> element
% Allows customization of figures
\ConfigureEnv{figure}                   % Configure the 'figure' environment
{                                       % Beginning code
  \ifvmode\IgnorePar\fi\EndP            % Handle vertical mode and paragraph endings
  \HCode{<div class="figure"\Hnewline>} % Start a div with class="figure"
  \bgroup                               % Begin a TeX group
  \Configure{float}{\ShowPar}{}{}       % Configure float-related settings
}
{                                       % Ending code
  \egroup                               % End the TeX group
  \ifvmode\IgnorePar\fi\EndP            % Handle vertical mode and paragraph endings
  \HCode{</div>}                        % Close the div
  \ShowPar                              % Show paragraph
  \par                                  % End paragraph
}
{}{}                                    % No special beginning/ending for inner contents

%% CSS styling overrides:

% 1.5 inch spacing to accommodate some lines that have tall math
\Css{body{line-height:1.5;}}

% right and left justified
\Css{body { text-align: justify; }}

% <config-eqns>
% <config-eqns/>

% Claude suggested Source Serif Pro as lighter sub for CMU
\Css{body{
    font-family: "Source Serif Pro", Georgia, Times, serif;
    font-weight: 200;    /* very light */
}}

% \Css{div.caption {text-align:left;font-size:83\%;text-indent:0em; margin-left:2em; margin-right:2em; }}
\Css{div.caption span.id{font-variant: small-caps; white-space: nowrap; }}
\Css{.figure div.caption{text-align: center;}}
\Css{.table div.caption{text-align: center;}}
\Css{.table div.pic-tabular{text-align:center;clear:both;overflow:auto;width:100\%;margin-bottom:1em;margin-left:auto;margin-right:auto}}
\Css{div.figure{text-align:center;clear:both;overflow:auto;width:100\%;margin-bottom:1em;margin-left:auto;margin-right:auto}}
\Css{div.table{text-align:center;clear:both;overflow:auto;width:100\%;margin-bottom:1em;margin-left:auto;margin-right:auto}}
\Css{div.float{text-align:center;clear:both;overflow:auto;width:100\%;margin-bottom:1em;margin-left:auto;margin-right:auto}}
\Css{.equation td{text-align:center; }}
\Css{td.equation { margin-top:5em; margin-bottom:5em; }}

% 20200910: Tried a bunch of ways to center the tabbing envt; all failed:
% \Css{div.tbody{text-align:center;}}
% \Css{.table div.tabbing{text-align:center;clear:both;overflow:auto;width:100\%;margin-bottom:1em;margin-left:auto;margin-right:auto}}
% \Css{div.tabbing{text-align:center;}}
% \Css{.tabbing div.tbody{text-align:center;clear:both;overflow:auto;width:100\%;margin-bottom:1em;margin-left:auto;margin-right:auto}}
% \Css{.table tabbing div.tbody{text-align:center;clear:both;overflow:auto;margin-bottom:1em;margin-left:auto;margin-right:auto}}

% Allow for CSS styling of subfigures via the 'subfigure' class
\ConfigureEnv{subfigure}         % Configure the subfigure environment
{                                % Beginning code
    \ifvmode\IgnorePar\fi\EndP   % Handle vertical mode and paragraph endings
    \HCode{<center><div class="subfigure">}  % Start a centered div with class="subfigure"
}
{                                % Ending code
    \ifvmode\IgnorePar\fi\EndP   % Handle vertical mode and paragraph endings
    \HCode{</div></center>}      % Close both the div and center elements
}
{}{}                             % No special beginning/ending for inner contents

% \Css{.subfigure{display: inline-block;}} would make the figures float next to each other
\Css{.subfigure img{display:block; margin-left:auto; margin-right:auto}} % Should, but does not seem to, center captions

% The following configures generation of png and svg files
% - dimensions are preserved from LaTeX source

\Configure{graphics*}           % Configure graphics handling
{png}                           % Specifically for PNG files
{
  % Command to ensure the PNG file is copied to the output directory
  \special{t4ht+@File: \csname Gin@base\endcsname.png}
  
  % Create HTML picture element
  \Picture[pict]{\csname Gin@base\endcsname .png 
    \space width="\expandafter\the\csname Gin@req@width\endcsname" 
  } 
}

% \Configure{Picture}{.svg}        % Configure Picture command to handle .svg extension
% \makeatletter                    % Allow @ in command names

% \Configure{graphics*}            % Configure graphics handling
% {svg}                           % Specifically for SVG files
% {
%   % Ensure the SVG file is included in the output
%   {\Configure{Needs}{File: \Gin@base.svg}\Needs{}}
  
%   % Create HTML picture element for the SVG
%   \Picture[\csname a:GraphicsAlt\endcsname]    % Include alt text if specified
%           {\csname Gin@base\endcsname.svg      % The SVG filename
%            \csname a:Gin-dim\endcsname}        % Include dimensions
% }
% \makeatother

% add any custom \Css or HTML commands here as needed.

% <includegraphics-sizing/>
% <includegraphics-sizing/>
\begin{document}

% <inline-math-config>
% <inline-math-config/>

% <toc-config>
% Configure toc to come before text content 
% https://12000.org/my_notes/faq/LATEX/htch4.htm
% https://tex.stackexchange.com/questions/44541/tex4ht-limit-toc
  \ConfigureToc{section} 
      {\tocNesting{1}\HCode{<li style="list-style-type:none;color:red;font-size:x-small"><a style="font-size:x-small">}}{ }{}{ } 
   \ConfigureToc{subsection} 
      {\tocNesting{2}\HCode{<li style="list-style-type:none;color:red;font-size:x-small"><a style="font-size:x-small">}}{ }{}{ } 
   \ConfigureToc{subsubsection} 
      {\tocNesting{3}\HCode{<li style="list-style-type:none;color:red;font-size:x-small"><a style="font-size:x-small">}}{ }{}{ } 
   \Configure{tableofcontents} 
      {} {\tocNesting{0}} {} {} {} 
 
   \newcount\c 
   \def\tocNesting#1{% 
      \expandafter\ifx \csname level#1\endcsname\relax 
          \ifnum #1>0 \HCode{<ul>}\fi 
          \expandafter\def \csname level#1\endcsname{\HCode{</ul>}} 
      \fi 
      \c=#1 \advance\c by 1 
      \loop 
        \csname level\the\c\endcsname 
        \expandafter\let \csname level\the\c\endcsname\relax 
        \advance\c by 1 
      \ifnum \c<10   \repeat 
   }
% <toc-config/>
   
\EndPreamble
